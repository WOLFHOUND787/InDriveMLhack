#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ—Ä–æ–≥–∞–º–∏
"""

import requests
import base64
from PIL import Image
import io

def test_detection(image_path, conf_threshold=0.05):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–µ–∫—Ü–∏—é —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ—Ä–æ–≥–∞–º–∏"""
    
    # –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    with open(image_path, 'rb') as f:
        image_bytes = f.read()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    files = {'file': (image_path, image_bytes, 'image/jpeg')}
    data = {'conf_threshold': conf_threshold}
    
    try:
        response = requests.post('http://localhost:8000/detect', files=files, data=data)
        
        if response.status_code == 200:
            result = response.json()
            print(f"\n=== –ü–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: {conf_threshold} ===")
            print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {result.get('car_condition', 'unknown')}")
            print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π: {result.get('total_damages', 0)}")
            print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {result.get('damage_stats', {})}")
            
            detections = result.get('detections', [])
            if detections:
                print("–î–µ—Ç–µ–∫—Ü–∏–∏:")
                for i, det in enumerate(detections):
                    print(f"  {i+1}. {det.get('class', 'unknown')} - {det.get('confidence', 0):.3f}")
            else:
                print("–î–µ—Ç–µ–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
            return result
        else:
            print(f"–û—à–∏–±–∫–∞: {response.status_code}")
            print(response.text)
            return None
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def main():
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–µ–∫—Ü–∏–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_images = [
        "data/images/val/car-body-scratches_jpg.rf.e17bfa6eb25f91ba238ce42790d94c2f.jpg",
        "data/images/val/7p4p1hie7oa01_jpg.rf.be1569ae6864834079eca32528be4034.jpg",
        "data/images/val/damaged-car-after-a-car-accident-2021-04-06-18-22-05-utc-scaled-e1631415899344_jpg.rf.7bc18289902d624ad762063249dad646.jpg"
    ]
    
    # –†–∞–∑–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    thresholds = [0.05, 0.1, 0.15, 0.2, 0.25, 0.3]
    
    for image_path in test_images:
        print(f"\nüñºÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º: {image_path}")
        print("-" * 50)
        
        for threshold in thresholds:
            result = test_detection(image_path, threshold)
            if result and result.get('total_damages', 0) > 0:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–∏ –ø–æ—Ä–æ–≥–µ {threshold}!")
                break
        else:
            print("‚ùå –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏ –ø—Ä–∏ –æ–¥–Ω–æ–º –ø–æ—Ä–æ–≥–µ")

if __name__ == "__main__":
    main()
